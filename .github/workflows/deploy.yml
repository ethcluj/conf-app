name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  # Call the backend tests workflow first
  test:
    name: Run Backend Tests
    uses: ./.github/workflows/backend-tests.yml

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    # Make deployment dependent on tests passing
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Node.js for UI
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'
        cache-dependency-path: ui/yarn.lock
        
    - name: Install dependencies and build UI
      run: |
        cd ui
        yarn install --frozen-lockfile
        yarn build
    
    - name: Set up Node.js for Backend
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install dependencies and build Backend
      run: |
        cd backend
        npm ci
        npm run build
        
    - name: Deploy to VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
        script: |
          cd /opt/conf-app
          
          # Pull latest code
          git pull
          
          # Install and build UI
          cd ui
          yarn install --frozen-lockfile
          yarn build
          
          # Install and build backend
          cd ../backend
          npm ci
          npm run build
          
          # Set up environment variables if not already done
          if [ ! -f .env ]; then
            echo "Creating .env file"
            cp .env.example .env
            # You would need to manually set these values on the server
            # or use GitHub secrets to populate them
          fi
          
          # Restart the application (assuming PM2 is used)
          pm2 restart conf-app-backend || pm2 start npm --name "conf-app-backend" -- start
