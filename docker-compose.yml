version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=/api
      - WDS_SOCKET_PORT=0
      - CHOKIDAR_USEPOLLING=true
      - PUBLIC_URL=/test
    depends_on:
      backend:
        condition: service_healthy

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    volumes:
      - ./ui:/app
      - /app/node_modules
    environment:
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - /app/node_modules
    environment:
      - DB_USER=postgres
      - DB_HOST=db
      - DB_NAME=value_db
      - DB_PASSWORD=postgres
      - DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3001/value"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=value_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.25
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_healthy

volumes:
  postgres_data: 